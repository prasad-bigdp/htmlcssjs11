Data Types: Datatypes defines the Type of Data it holds. Javascript is Dynamically Typed Language
// int a=5; a="prasad"  --> in other programming languages variables will be fixed for one Data type but dynamic dat typing will not allow it

General classification of Data types in JS are 
i. Primitive Data Types: There are 5 main Primitive Data types
   a. number: any numerical value is considered as number(interger or decimal)
     numbers have some default methods like 
     number.toFixed(3) ==> round figure the number upto 3 decimal digits
     number.toPrecision(3) ==> round figure the number upto 3 total digits
     number.toString(2) ==> conver given number into binary
   
     numbers also have Math methods:
     Math.sqrt --> finds the square root
     Mathcbrt ---> finds the cube root
     Math.abs ---> finds absolute value(remove negitive)
     Math.floor() --> lowest nearest integer
     Math.ceil() --> highest nearest integer
     Math.random()  --> random value between 0.0 to 1.0
     Math.max()---> finds maximum value
     Math.min()---> finds minimum value
     Math.pow(a,b) --> finds a power b
     Math.round() --> round figure the number
   b. string: any combination of alphanumerical value is string.
      In Javascript , we can add strings in three ways
      single quotation, double quotation and backtick
      there is no difference between single or double but it is recommanded to use any one only throught the product
      backticks are used to get dynamic values in the strings without breaking the string
          // strings
let str = "JS is so easy"
console.log(str, typeof str)
let str1 = "time is 12 o' clock"
let str2 = 'the gandhi said "good night"'
// backtick is used for strings. it is called template literal. it is used to assign dynamic values inside the string without breaking it
let p = 5, q = 10;
console.log(" the sum of " + p + " and " + q + " is " + (p + q));
console.log(`the sum of ${p} and ${q} is ${p+q}`)
let pagename = "fruits";
let url = `https://www.amazon.in/${pagename}`

// take cost=10, items=5; print in console total value without breaking string
let cost = 10, items = 5;
console.log(` the total cost is ${cost * items}`)

// strings have some default functions
// Every string is nothing but an array of characters
let s="prasad"
console.log(s[0] + s[2])
console.log(s.length) //6 - no.of characters
console.log(s.concat(" raj")) //prasad raj
console.log(s.toUpperCase(),s) // PRASAD
// strings are immutable- u cannot change
console.log(s.toLowerCase()) //prasad
console.log(s.startsWith('pr')) //true
let na = "adha sharma"
console.log(na.endsWith('sharma')) //true
console.log(s.indexOf('a')) // first occurence value index
console.log(s.lastIndexOf('a')) //4
console.log(s.charAt('0')) //p
console.log("    prasad  ".trim()) // remove space from last and first
console.log("js is so easy".split("")) // split is used to split the string based on delimiter and return an array
console.log(s.replaceAll('a', 'p'))
console.log("prasad".slice(2))//asad
console.log("prasad".slice(1, 5)) //rasa




   c. boolean: boolean is used to define true/ false but in JS , sometimes data type conversion happens automatically , at that time true means 1 and false means zero.
   usually boolean values are used for checking conditions or return some condition values
   d. undefined:
   you can access a value before its declaration. it is called Hoisting. it will give value 'undefined'
   Whole Javacript engine follows Execution Content called Global Execution Content
   Any function will be called Local Execution Content
   All Execution Contents are maintained by one stack called call stack
    undefined means an accidental absence of value. but it expects value in future
   e. null: null means intentional absence of value
ii. Non-primitive Data types (reference Data types)

what is difference primitve and non-primitive?
Priitive Data types stores the values and compares it. Non promitive Datatypes compares Addresses
Primitve Datatypes are immutable(will not change original when a method is applied). non-primitive data are mutable(will change original when a method is applied)

there are 3 non primitve types in JS
i.functions
ii.Arrays
iii.objects 
